@model ControleContas.Application.ViewModels.DashboardViewModel

<link href="~/css/Dashboard/Index.css" rel="stylesheet" />

<br />
<h2>Gráficos</h2>

<div class="row">
    <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12">
        <canvas id="chartCategorias">
        </canvas>
    </div>
</div>

<br />
<h2>Lançamentos e parcelas por mês</h2>

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="table-responsive table-fixed-columns">
            @if (Model != null && (Model.Calendario.Any() && Model.Lancamentos.Any()))
            {
                <table class="table table-striped table-fixed-columns">
                    <thead style="font-weight: bold;">
                        <tr>
                            <th>Lançamento</th>
                            @foreach (var calendario in Model.Calendario)
                            {
                                <th>
                                    @calendario.Descricao
                                </th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Lancamentos)
                        {
                            <tr>
                                <th style="background-color:@item.Contas.Cor">
                                    @item.Descricao (@item.ValorTotal.ToString("C") em @item.ParcelasTotal vezes)
                                </th>
                                @foreach (var calendario in Model.Calendario)
                                {
                                    var parcela = item.Parcelas.Where(x => x.AnoCobranca == calendario.Ano && x.MesCobranca == calendario.Mes).FirstOrDefault();
                                    @if (parcela != null)
                                    {
                                        <td style="background-color:@item.Categorias.Cor;">
                                            @parcela.ParcelaValor.ToString("C") (@parcela.Lancamentos.Contas.VencimentoDia.ToString("D2")/@parcela.MesCobranca.ToString("D2"))
                                        </td>
                                    }
                                    else
                                    {
                                        <td>
                                            R$0,00
                                        </td>
                                    }
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                @:-
            }
        </div>
    </div>
</div>

<br />
<h2>Totais por mês</h2>

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="table-responsive table-fixed-columns">
            <table class="table table-striped">
                <thead style="font-weight: bold;">
                    <tr>
                        <th>Conta</th>
                        @foreach (var calendario in Model.Calendario)
                        {
                            <th>
                                @calendario.Descricao
                            </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var conta in Model.Contas)
                    {
                        <tr>
                            <th style="background-color:@conta.Cor">
                                @conta.Nome
                            </th>
                            @foreach (var calendario in Model.Calendario)
                            {
                                <td>
                                    @Model.Lancamentos.Where(x => x.ContasId == conta.Id).Sum(x => x.Parcelas.Where(x => x.MesCobranca == calendario.Mes && x.AnoCobranca == calendario.Ano).Sum(x => x.ParcelaValor)).ToString("C")
                                </td>
                            }
                        </tr>
                    }
                    <tr>
                        <th>
                            Total
                        </th>
                        @foreach (var calendario in Model.Calendario)
                        {
                            <td>
                                @Model.Lancamentos.Sum(x => x.Parcelas.Where(x => x.MesCobranca == calendario.Mes && x.AnoCobranca == calendario.Ano).Sum(x => x.ParcelaValor)).ToString("C")
                            </td>
                        }
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<hr />
<br />
<h5>Contas:</h5>
<div class="row">
    @foreach (var item in Model.Contas)
    {
        <div class="col-lg-1 col-md-3 col-sm-3 col-xs-4 col-xl-4" style="border: 1px solid #EEE;padding: 5px;">
            <div style="width: 15px;height:15px;border:1px solid #000;background-color:@item.Cor;"></div> @item.Nome
        </div>
    }
</div>
<br />
<h5>Categorias:</h5>
<div class="row">
    @foreach (var item in Model.Categorias)
    {
        <div class="col-lg-1 col-md-3 col-sm-3 col-xs-4 col-xl-4" style="border: 1px solid #EEE;padding: 5px;">
            <div style="width: 15px;height:15px;border:1px solid #000;background-color:@item.Cor;"></div> @item.Nome
        </div>
    }
</div>


@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"></script>

    <script>
        $(document).ready(function () {
            renderChart();
        });

        function renderChart() {
            var ctx = $('#chartCategorias');
            var chart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                    datasets: [{
                        data: [12, 19, 3, 5, 2, 3],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                }
            });
        }
    </script>
}